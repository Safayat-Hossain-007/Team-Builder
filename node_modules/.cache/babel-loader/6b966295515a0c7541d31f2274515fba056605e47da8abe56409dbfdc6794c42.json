{"ast":null,"code":"var _jsxFileName = \"/home/safayat/Desktop/All my projects/Web Development/Programming hero/Team Builder/teambuilder/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport User from './User'; // Assuming User component is imported correctly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetch('https://randomuser.me/api/?results=15').then(res => res.json()).then(data => {\n      if (data.results && Array.isArray(data.results)) {\n        setUsers(data.results); // Set users state with fetched data\n      } else {\n        console.error('Invalid data format:', data);\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []); // Empty dependency array for one-time fetch\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Team builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), users && users.map(user => /*#__PURE__*/_jsxDEV(User, {\n      user: user\n    }, user.login.uuid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","User","jsxDEV","_jsxDEV","App","_s","users","setUsers","fetch","then","res","json","data","results","Array","isArray","console","error","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","login","uuid","_c","$RefreshReg$"],"sources":["/home/safayat/Desktop/All my projects/Web Development/Programming hero/Team Builder/teambuilder/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport User from './User'; // Assuming User component is imported correctly\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    fetch('https://randomuser.me/api/?results=15')\n      .then(res => res.json())\n      .then(data => {\n        if (data.results && Array.isArray(data.results)) {\n          setUsers(data.results); // Set users state with fetched data\n        } else {\n          console.error('Invalid data format:', data);\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  }, []); // Empty dependency array for one-time fetch\n\n  return (\n    <div>\n      <h1>Team builder</h1>\n      {/* Check if users is an array before mapping */}\n      {users && users.map(user => (\n        <User key={user.login.uuid} user={user} />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,uCAAuC,CAAC,CAC3CC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACZ,IAAIA,IAAI,CAACC,OAAO,IAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAACC,OAAO,CAAC,EAAE;QAC/CN,QAAQ,CAACK,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;MAC1B,CAAC,MAAM;QACLG,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEL,IAAI,CAAC;MAC7C;IACF,CAAC,CAAC,CACDM,KAAK,CAACD,KAAK,IAAI;MACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEpBjB,KAAK,IAAIA,KAAK,CAACkB,GAAG,CAACC,IAAI,iBACtBtB,OAAA,CAACF,IAAI;MAAuBwB,IAAI,EAAEA;IAAK,GAA5BA,IAAI,CAACC,KAAK,CAACC,IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAClB,EAAA,CA3BQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}